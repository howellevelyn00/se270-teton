name: Simple CI/CD Pipeline for CSE 270

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the latest code
        uses: actions/checkout@v4.1.2

      - name: Set up Python 3.12
        uses: actions/setup-python@v5.0.0
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest requests pytest-mock selenium requests-mock coverage
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Start local API server (if needed)
        run: |
          # Start your FastAPI or Flask app here
          # Replace `main:app` with your actual entry point
          nohup uvicorn main:app --host 127.0.0.1 --port 8000 > server.log 2>&1 &
          sleep 3

      - name: Startup HTTP Server for pipeline tests
        uses: Eun/http-server-action@v1.0.11
        with:
          directory: .
          port: 5500
          index-files: |
            ["index.html", "index.htm"]

      - name: Run tests
        run: API_URL="http://127.0.0.1:8000/users" pytest

  analyze:
    needs: build
    name: Analyze
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  deploy:
    needs: analyze
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.2
      - name: Setup Pages
        uses: actions/configure-pages@v4.0.0
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          path: '.'  # deploy entire repo so site works from root
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4.0.5
